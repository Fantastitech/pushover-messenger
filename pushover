#!/bin/bash

# Pushover push notification script
# This script will send messages to your mobile devices
# using the Pushover service at Pushover.net.
# To use it, create an account on Pushover.net
# and get a user and app key. You can pass them
# directly or set them as env variables. Then run
# the script with a message in quotes to send a
# push notification to your devices from the command line

while getopts "u:k:t::h" OPTION
do
        case $OPTION in
                u)
                        PU_USER=$OPTARG
                        ;;
                k)
                        PU_TOKEN=$OPTARG
                        ;;
                t)
                        PU_TITLE=$OPTARG
                        ;;
                h)
                        echo "Pushover messanger"
                        echo -e "\tThis script sends push notifications to mobile devices using the Pushover service"
                        echo -e "\tYou must create an account at https://Pushover.net then create an application for your messages."
                        echo -e "\tPushover will accept a string, a URL, or a single line of input from stdin.\n"
                        echo -e "Usage: pushover [OPTIONS] message \n"
                        echo -e "\tOptions:"
                        echo -e '\t\t-u,               Pushover user key (Can be exported as $PU_USER).'
                        echo -e '\t\t-k,               Pushover application token/key (Can be exported as PU_TOKEN).'
                        echo -e '\t\t-t,               Message title. If left blank, user@hostname will be used.'
                        exit
                        ;;
        esac
done
shift "$((OPTIND - 1))"

if ! [[ -t 0 ]]; then
        read  input
        PU_MESSAGE=$input
elif [[ -n $1 ]]; then
        PU_MESSAGE=$1
fi

if [[ -z $PU_TOKEN ]]; then
        echo 'App key missing. Pass your app token/key with -k or export it as $PU_USER.'
        echo 'Use -h for a full list of options.'
elif [[ -z $PU_USER ]]; then
        echo 'User key missing. Pass your user key with -u or export it as $PU_TOKEN.'
elif [[ -z $PU_MESSAGE ]]; then
        echo 'Message can not be empty. Enter a message or run pushover with stdin.'
else
        if [[ -z $PU_TITLE ]]; then
                PU_TITLE="`whoami`@${HOSTNAME}"
        fi
        curl -s \
        --form-string "token=$PU_TOKEN" \
        --form-string "user=$PU_USER" \
        --form-string "title=$PU_TITLE" \
        --form-string "message=$PU_MESSAGE" \
        -o /dev/null \
        https://api.pushover.net/1/messages.json
fi
